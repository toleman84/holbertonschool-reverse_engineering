# Clave usada en el cifrado (extraída de `obj.key`)
key = "mysecretkey"

# Flag cifrada extraída del binario
encrypted_flag = bytearray([
    0x9e, 0x89, 0x84, 0x6a, 0x78, 0x65, 0x85, 0x86, 0x6a, 0x97, 0x7d, 0x79, 0x7c, 0x84, 0x63, 0x80, 
    0x7c, 0x7f, 0x6b, 0x67, 0x84, 0x8b, 0xab, 0x90, 0x7b, 0x69, 0x83, 0x70, 0x89, 0x6b, 0x99, 0x7c, 
    0x79, 0x7c, 0x8d, 0x6c, 0x6f, 0x7e, 0x81, 0xae, 0x86, 0x6a, 0xb3, 0x6d, 0x7b, 0x7f, 0x66, 0x9d, 
    0x7e, 0x6a, 0x7f, 0x96, 0x67, 0x8f, 0x93, 0x82, 0x89, 0x82, 0x63, 0xb4, 0x74
])

# Descifrar aplicando la ecuación inversa
decrypted_flag = bytearray()
for i in range(len(encrypted_flag)):
    original_char = (encrypted_flag[i] - ord(key[(i+1) % len(key)])) ^ ord(key[i % len(key)])
    decrypted_flag.append(original_char)

# Convertir a string
print("FLAG:", decrypted_flag.decode())
